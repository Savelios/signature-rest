name: CI-CD-Pipeline-via-SSH

on:
  push:
    branches:
      - master

jobs:
  ci_part:
    runs-on: ubuntu-latest

    steps:
      - name: Git clone our repo
        uses: actions/checkout@v3

      - run: set -eu
      - run: mkdir "$HOME/.ssh"
      - run: echo "${{ secrets.SERVER_PRIVATE_KEY }}" > "$HOME/.ssh/key"
      - run: chmod 600 "$HOME/.ssh/key"

      - name: Create ZIP deployment package
        run: zip -r signature_app_${{ github.sha }}.zip ./ -x *.git*

      - name: Print Happy Message for CI finish
        run: echo "Commit Pipeline part Finished successfully!"

      - name: Build Deployment on Server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_PRIVATE_KEY }}
          port: 22
          script: |
            scp -r signature_app_${{ github.sha }}.zip ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}:/root/project/prod

            ssh -tt ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} << 'EOF'
              cd /root/project/prod
              unzip signature_app_${{ github.sha }}.zip
              npm install
              npm run build
            EOF

      - name: Print Message for CD finish
        run: echo "Push Pipeline part Finished successfully!"

  cd_part:
      runs-on: ubuntu-latest
      needs: [ci_part]

      steps:
        - name: Copy build package to var/www via SSH
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.SERVER_HOST }}
            username: ${{ secrets.SERVER_USERNAME }}
            key: ${{ secrets.SSH_PRIVATE_KEY }}
            port: 22
            script: |
              scp -r signature_app_${{ github.sha }}.zip ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}:/root/project/prod

              ssh -tt ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} << 'EOF'
                cd
                cd ../../var/www
                rm -rf build
                cd 
                cd /root/project/prod
                mv build ../../var/www
                nginx -s reload
              EOF

        - name: Print Message for CD finish
          run: echo "CD BUILD part Finished successfully!"
