name: CI-CD-Pipeline-via-SSH
'on':
  push:
    branches:
      - master
jobs:
  push_code_to_server:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone our repo
        uses: actions/checkout@v3
      - name: Create ZIP deployment package
        run: 'zip -r signature_app_${{ github.sha }}.zip ./ -x *.git*'
      - name: Print Happy Message for CI finish
        run: echo "Push Pipeline part Finished successfully!"
  build_code_on_server:
    runs-on: ubuntu-latest
    needs:
      - push_code_to_server
    steps:
      - name: Build Deployment on Server via SSH
        uses: easingthemes/ssh-deploy@main
        with:
          host: '${{ secrets.SERVER_HOST }}'
          username: '${{ secrets.SERVER_USERNAME }}'
          key: '${{ secrets.SSH_PRIVATE_KEY }}'
          port: '${{ secrets.SERVER_PORT }}'
          script: >
            scp -r signature_app_${{ github.sha }}.zip ${{
            secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST
            }}:/root/project/prod


            ssh -tt ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} <<
            'EOF'
              cd /root/project/prod
              unzip signature_app_${{ github.sha }}.zip
              npm install
              npm run build
            EOF
      - name: Print Message for CD finish
        run: echo "Build Pipeline part Finished successfully!"
  deploy_to_prod:
      runs-on: ubuntu-latest
      needs:
        - build_code_on_server
      steps:
        - name: Copy build package to var/www via SSH
          uses: easingthemes/ssh-deploy@main
          with:
            host: '${{ secrets.SERVER_HOST }}'
            username: '${{ secrets.SERVER_USERNAME }}'
            key: '${{ secrets.SSH_PRIVATE_KEY }}'
            port: '${{ secrets.SERVER_PORT }}'
            script: >
              scp -r signature_app_${{ github.sha }}.zip ${{
              secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST
              }}:/root/project/prod


              ssh -tt ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}
              << 'EOF'
                cd
                cd ../../var/www
                rm -rf build
                cd 
                cd /root/project/prod
                mv build ../../var/www
                nginx -s reload
              EOF
        - name: Print Message for CD finish
          run: echo "CD Pipeline part Finished successfully!"
